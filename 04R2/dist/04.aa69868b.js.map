{"mappings":"AAAA,MAAM,QAAQ;IACV;QAAE,MAAM;QAAQ,OAAO;IAAG;IAC1B;QAAE,MAAM;QAAQ,OAAO;IAAE;IACzB;QAAE,MAAM;QAAQ,OAAO;IAAE;IACzB;QAAE,MAAM;QAAQ,OAAO;IAAE;IACzB;QAAE,MAAM;QAAQ,OAAO;IAAG;IAC1B;QAAE,MAAM;QAAQ,OAAO;IAAE;IACzB;QAAE,MAAM;QAAQ,OAAO;IAAE;IACzB;QAAE,MAAM;QAAQ,OAAO;IAAE;IACzB;QAAE,MAAM;QAAQ,OAAO;IAAE;IACzB;QAAE,MAAM;QAAQ,OAAO;IAAG;IAC1B;QAAE,MAAM;QAAQ,OAAO;IAAG;IAC1B;QAAE,MAAM;QAAQ,OAAO;IAAE;IACzB;QAAE,MAAM;QAAQ,OAAO;IAAG;IAC1B;QAAE,MAAM;QAAQ,OAAO;IAAE;IACzB;QAAE,MAAM;QAAQ,OAAO;IAAE;IACzB;QAAE,MAAM;QAAQ,OAAO;IAAE;CAC5B;AAED,MAAM,gBAAgB,SAAS,cAAc,CAAC;AAC9C,MAAM,gBAAgB,SAAS,cAAc,CAAC;AAC9C,MAAM,aAAa,SAAS,cAAc,CAAC;AAC3C,MAAM,aAAa,SAAS,cAAc,CAAC;AAE3C,mBAAmB;AACnB,SAAS;IACL,cAAc,KAAK,CAAC,OAAO,GAAG;IAC9B,cAAc,KAAK,CAAC,OAAO,GAAG;IAC9B,WAAW,SAAS,GAAG;IAEvB,MAAM,WAAW,SAAS,cAAc,CAAC;IACzC,MAAM,OAAO,CAAC,CAAA;QACV,MAAM,OAAO,SAAS,OAAO,CAAC,SAAS,CAAC;QACxC,KAAK,aAAa,CAAC,SAAS,WAAW,GAAG,KAAK,IAAI;QACnD,KAAK,aAAa,CAAC,SAAS,gBAAgB,CAAC,SAAS;YAClD,eAAe,KAAK,IAAI;QAC5B;QACA,WAAW,WAAW,CAAC;IAC3B;AACJ;AAEA,YAAY;AACZ,SAAS,eAAe,YAAY;IAChC,cAAc,KAAK,CAAC,OAAO,GAAG;IAC9B,cAAc,KAAK,CAAC,OAAO,GAAG;IAC9B,WAAW,SAAS,GAAG;IACvB,MAAM,WAAW,SAAS,cAAc,CAAC;IACzC,MAAM,aAAa,MAAM,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,KAAK,EAAE;IACjE,MAAM,OAAO,CAAC,CAAA;QACV,MAAM,OAAO,SAAS,OAAO,CAAC,SAAS,CAAC;QACxC,KAAK,aAAa,CAAC,SAAS,WAAW,GAAG,KAAK,IAAI;QACnD,KAAK,aAAa,CAAC,UAAU,WAAW,GAAG,KAAK,KAAK;QACrD,KAAK,aAAa,CAAC,UAAU,WAAW,GAAG;QAC3C,MAAM,UAAU,eAAe,IAAI,IAAI,AAAC,KAAK,KAAK,GAAG,aAAc;QACnE,KAAK,aAAa,CAAC,eAAe,KAAK,CAAC,KAAK,GAAG,UAAU;QAC1D,IAAG,KAAK,IAAI,KAAK,cACb,KAAK,aAAa,CAAC,SAAS,SAAS,CAAC,GAAG,CAAC;QAE9C,WAAW,WAAW,CAAC;IAC3B;IAEA,uBAAuB;IACvB,WAAW,gBAAgB,CAAC,SAAS,OAAO,CAAC,CAAA;QACzC,KAAK,gBAAgB,CAAC,SAAS;IACnC;AACJ;AAEA","sources":["src/js/main.js"],"sourcesContent":["const types = [\n    { name: \"ISTJ\", count: 10 },\n    { name: \"ISFJ\", count: 6 },\n    { name: \"INFJ\", count: 7 },\n    { name: \"INTJ\", count: 1 },\n    { name: \"ISTP\", count: 30 },\n    { name: \"ISFP\", count: 4 },\n    { name: \"INFP\", count: 1 },\n    { name: \"INTP\", count: 1 },\n    { name: \"ESTP\", count: 2 },\n    { name: \"ESFP\", count: 44 },\n    { name: \"ENFP\", count: 10 },\n    { name: \"ENTP\", count: 3 },\n    { name: \"ESTJ\", count: 20 },\n    { name: \"ESFJ\", count: 0 },\n    { name: \"ENFJ\", count: 9 },\n    { name: \"ENTJ\", count: 1 }\n];\n\nconst selectSection = document.getElementById(\"select-section\");\nconst resultSection = document.getElementById(\"result-section\");\nconst selectView = document.getElementById(\"select-view\");\nconst resultView = document.getElementById(\"result-view\");\n\n// MBTIタイプ選択画面を表示する\nfunction showSelectGrid() {\n    selectSection.style.display = \"\";\n    resultSection.style.display = \"none\";\n    selectView.innerHTML = \"\";\n\n    const template = document.getElementById(\"item-template\");\n    types.forEach(type => {\n        const card = template.content.cloneNode(true);\n        card.querySelector(\".name\").textContent = type.name;\n        card.querySelector(\".card\").addEventListener(\"click\", () => {\n            showResultGrid(type.name);\n        });\n        selectView.appendChild(card);\n    });\n}\n\n// 結果画面を表示する\nfunction showResultGrid(selectedName) {\n    selectSection.style.display = \"none\";\n    resultSection.style.display = \"\";\n    resultView.innerHTML = \"\";\n    const template = document.getElementById(\"result-template\");\n    const totalCount = types.reduce((sum, type) => sum + type.count, 0);\n    types.forEach(type => {\n        const card = template.content.cloneNode(true);\n        card.querySelector(\".name\").textContent = type.name;\n        card.querySelector(\".count\").textContent = type.count;\n        card.querySelector(\".total\").textContent = totalCount;\n        const percent = totalCount === 0 ? 0 : (type.count / totalCount) * 100;\n        card.querySelector(\".percentage\").style.width = percent + \"%\";\n        if(type.name === selectedName) {\n            card.querySelector(\".card\").classList.add(\"selected\");\n        }\n        resultView.appendChild(card);\n    });\n\n    // 結果カードをクリックすると選択画面に戻る\n    resultView.querySelectorAll(\".card\").forEach(card => {\n        card.addEventListener(\"click\", showSelectGrid);\n    });\n}\n\nshowSelectGrid();\n"],"names":[],"version":3,"file":"04.aa69868b.js.map","sourceRoot":"/__parcel_source_root/"}